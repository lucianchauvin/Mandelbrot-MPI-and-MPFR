#ifndef MANDEL_H
#define MANDEL_H

#include "mpi.h"
#include <stdio.h>
#include <stdlib.h>
#include <mpfr.h>
#include <math.h>
#include <time.h>

#define PARENT                  0           /* rank of the parent node */
#define rez_width               640.0       /* resolution of the width, enter as float */
#define rez_height              360.0       /* resolution of the height, enter as float */
#define x_wid                   4.0         /* inital distance to be space between left and right bound on the real line from the center above, enter as float */
#define iter_delta              5           /* increase max max_iters by this much each frame */
#define max_frames              60*4        /* number of frames to generate */
#define max_iters               200         /* max iterations to run initally */
#define zoom_init               95.0/100    /* zoom in by one minus this much each frame, enter as float (probably) */
#define precision               128         /* bits to use for mpfr_t vars */
#define round_mode              MPFR_RNDZ   /* mpfr roudning mode */
#define frame_skip_init         0           /* number of inital frames to skip in rendering */
#define escape_radius           (1 << 16)   /* escape radius (set as high as you want) */
#define mov_amnt                0           /* amount to shift colors based on frame */


typedef struct color_s {
    int r, g, b;
} color;

color blue_gold_ctls [] = {(color){  0,  7,100}, 
                           (color){ 32,107,203},
                           (color){237,255,255},
                           (color){255,170,  0},
                           (color){  0,  2,  0}};

color news [] = {(color){  0,  0,  0},
                 (color){ 36, 26, 21},
                 (color){112,102, 90},
                 (color){255,255,255},
                 (color){  0,  0,  0},
                 (color){ 16, 22, 35},
                 (color){141,144,153},
                 (color){255,255,255},
                 (color){  0,  0,  0}};


char* x_center_s       = "-1.9997740601362903593126807559602500475710416233856384007148508574291012335984591928248364190215796259575718318799960175396106897245889581254834492701372949636783094955897931317174101259095891469501748126725148714587333938548443819033709904187344921523413310221887295870857771431011674873342592895504186325482220668710775749899926429101099841583206278295793058921625817004481783699245865364627140554117737774937789463895102748671351750212506004241754983473339789940659968568850689353099462034492524909310777724611601104714214019347435268544619054369865904944457792527241696528695821059623303046651934176389789308453627525109367436309636375268231073110318555064708363221007235298404379856922536028913291478442839193381367508575286692330907891402483843152933153748354825108021776358693600801782904774626935265722056455978643513448489091026679036353407968495795003386248005939867069799946547181378474054113117046900560609110812439442002663909295191705374444149326937073460052706389967886211172676612720028299452788285465688867116337489531157494508508315428488520037968118008255840569742557333862639124341116894229885253643651920014148109308402199399127712572209466874971603743536096235390414412927589954662603878558182262865151900604451937214289079939337905846647369517138325441736853526711818853134657265043099539402286244220638999824999819000131999789999857999958";
char* y_center_s       = "-0.0000000032900403214794350534969786759266805967852946505878410088326046927853549452991056352681196631150325234171525664335353457621247922992470898021063583060218954321140472066153878996044171428801408137278072521468882260382336298800961530905692393992277070012433445706657829475924367459793505729004118759963065667029896464160298608486277109065108339157276150465318584383757554775431988245033409975361804443001325241206485033571912765723551757793318752425925728969073157628495924710926832527350298951594826689051400340011140584507852761857568007670527511272585460136585523090533629795012272916453744029579624949223464015705500594059847850617137983380334184205468184810116554041390142120676993959768153409797953194054452153167317775439590270326683890021272963306430827680201998682699627962109145863135950941097962048870017412568065614566213639455841624790306469846132055305041523313740204187090956921716703959797752042569621665723251356946610646735381744551743865516477084313729738832141633286400726001116308041460406558452004662264165125100793429491308397667995852591271957435535504083325331161340230101590756539955554407081416407239097101967362512942992702550533040602039494984081681370518238283847808934080198642728761205332894028474812918370467949299531287492728394399650466260849557177609714181271299409118059191938687461000000000000000000000000000000000000";
#endif
